// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class LogNewProvableQuery extends EthereumEvent {
  get params(): LogNewProvableQuery__Params {
    return new LogNewProvableQuery__Params(this);
  }
}

export class LogNewProvableQuery__Params {
  _event: LogNewProvableQuery;

  constructor(event: LogNewProvableQuery) {
    this._event = event;
  }

  get description(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class Publish extends EthereumEvent {
  get params(): Publish__Params {
    return new Publish__Params(this);
  }
}

export class Publish__Params {
  _event: Publish;

  constructor(event: Publish) {
    this._event = event;
  }

  get ethv(): string {
    return this._event.parameters[0].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EthVIndexV1 extends SmartContract {
  static bind(address: Address): EthVIndexV1 {
    return new EthVIndexV1("EthVIndexV1", address);
  }

  ethv(): string {
    let result = super.call("ethv", []);

    return result[0].toString();
  }

  try_ethv(): CallResult<string> {
    let result = super.tryCall("ethv", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", []);

    return result[0].toAddress();
  }

  try_owner(): CallResult<Address> {
    let result = super.tryCall("owner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class __callbackCall extends EthereumCall {
  get inputs(): __callbackCall__Inputs {
    return new __callbackCall__Inputs(this);
  }

  get outputs(): __callbackCall__Outputs {
    return new __callbackCall__Outputs(this);
  }
}

export class __callbackCall__Inputs {
  _call: __callbackCall;

  constructor(call: __callbackCall) {
    this._call = call;
  }

  get _requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get curr_ethv(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class __callbackCall__Outputs {
  _call: __callbackCall;

  constructor(call: __callbackCall) {
    this._call = call;
  }
}

export class __callback1Call extends EthereumCall {
  get inputs(): __callback1Call__Inputs {
    return new __callback1Call__Inputs(this);
  }

  get outputs(): __callback1Call__Outputs {
    return new __callback1Call__Outputs(this);
  }
}

export class __callback1Call__Inputs {
  _call: __callback1Call;

  constructor(call: __callback1Call) {
    this._call = call;
  }

  get _myid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _result(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _proof(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class __callback1Call__Outputs {
  _call: __callback1Call;

  constructor(call: __callback1Call) {
    this._call = call;
  }
}

export class UpdateETHVCall extends EthereumCall {
  get inputs(): UpdateETHVCall__Inputs {
    return new UpdateETHVCall__Inputs(this);
  }

  get outputs(): UpdateETHVCall__Outputs {
    return new UpdateETHVCall__Outputs(this);
  }
}

export class UpdateETHVCall__Inputs {
  _call: UpdateETHVCall;

  constructor(call: UpdateETHVCall) {
    this._call = call;
  }
}

export class UpdateETHVCall__Outputs {
  _call: UpdateETHVCall;

  constructor(call: UpdateETHVCall) {
    this._call = call;
  }
}
